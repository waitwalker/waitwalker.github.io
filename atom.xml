<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>waitwalker</title>
  
  <subtitle>Keep Moving</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://waitwalker.github.io/"/>
  <updated>2019-05-15T10:38:51.779Z</updated>
  <id>https://waitwalker.github.io/</id>
  
  <author>
    <name>waitwalker</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>完整前后台开源项目--狗圈儿</title>
    <link href="https://waitwalker.github.io/2019/05/15/%E5%AE%8C%E6%95%B4%E5%89%8D%E5%90%8E%E5%8F%B0%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE-%E7%8B%97%E5%9C%88%E5%84%BF/"/>
    <id>https://waitwalker.github.io/2019/05/15/完整前后台开源项目-狗圈儿/</id>
    <published>2019-05-15T10:35:19.000Z</published>
    <updated>2019-05-15T10:38:51.779Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p align=&quot;center&quot;&gt;&lt;br&gt;&lt;img
        
      
    
    </summary>
    
      <category term="开源项目" scheme="https://waitwalker.github.io/categories/%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE/"/>
    
    
      <category term="Swift" scheme="https://waitwalker.github.io/tags/Swift/"/>
    
      <category term="iOS" scheme="https://waitwalker.github.io/tags/iOS/"/>
    
      <category term="开源" scheme="https://waitwalker.github.io/tags/%E5%BC%80%E6%BA%90/"/>
    
  </entry>
  
  <entry>
    <title>读《人生》</title>
    <link href="https://waitwalker.github.io/2019/05/02/%E8%AF%BB%E3%80%8A%E4%BA%BA%E7%94%9F%E3%80%8B/"/>
    <id>https://waitwalker.github.io/2019/05/02/读《人生》/</id>
    <published>2019-05-02T09:50:59.000Z</published>
    <updated>2019-05-02T10:04:59.923Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;读完路遥的人生之后，心情有点沉重。人生如戏,戏如人生。当我们旅途不顺时应该怎样调节;当我们面对这一系列的艰难抉择时，我们该怎么办;在一些诱惑面前我们，是否能够把握好自己。人生这条
        
      
    
    </summary>
    
      <category term="读书" scheme="https://waitwalker.github.io/categories/%E8%AF%BB%E4%B9%A6/"/>
    
    
      <category term="人生" scheme="https://waitwalker.github.io/tags/%E4%BA%BA%E7%94%9F/"/>
    
      <category term="读后感" scheme="https://waitwalker.github.io/tags/%E8%AF%BB%E5%90%8E%E6%84%9F/"/>
    
  </entry>
  
  <entry>
    <title>堆</title>
    <link href="https://waitwalker.github.io/2019/04/30/%E5%A0%86/"/>
    <id>https://waitwalker.github.io/2019/04/30/堆/</id>
    <published>2019-04-30T10:48:57.000Z</published>
    <updated>2019-04-30T10:49:25.280Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;堆是二叉树的一种,分为最小堆:其根节点恒小于子节点;最大堆:其根节点恒大于子节点.堆总是一颗完全二叉树,除了最底层,其它层都被填满,且最底层尽可能从左往右填入.常见的堆有二叉堆,斐波那契堆等.&lt;br&gt;堆又名优先队列,但并不是队列.之前我们了解队列是满足FIFO的数据结构,而
        
      
    
    </summary>
    
      <category term="数据结构与算法" scheme="https://waitwalker.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="数据结构" scheme="https://waitwalker.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="算法" scheme="https://waitwalker.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="Swift" scheme="https://waitwalker.github.io/tags/Swift/"/>
    
      <category term="堆" scheme="https://waitwalker.github.io/tags/%E5%A0%86/"/>
    
      <category term="优先队列" scheme="https://waitwalker.github.io/tags/%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>AVL树</title>
    <link href="https://waitwalker.github.io/2019/04/30/AVL%E6%A0%91/"/>
    <id>https://waitwalker.github.io/2019/04/30/AVL树/</id>
    <published>2019-04-29T22:31:36.000Z</published>
    <updated>2019-04-29T22:32:06.070Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2 id=&quot;AVL树定义&quot;&gt;&lt;a href=&quot;#AVL树定义&quot; class=&quot;headerlink&quot; title=&quot;AVL树定义&quot;&gt;&lt;/a&gt;AVL树定义&lt;/h2&gt;&lt;p&gt;AVL树是一个带平衡条件的二叉搜索树.AVL树得名于它的发明者G. M.
        
      
    
    </summary>
    
      <category term="数据结构与算法" scheme="https://waitwalker.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="数据结构" scheme="https://waitwalker.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="算法" scheme="https://waitwalker.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="Swift" scheme="https://waitwalker.github.io/tags/Swift/"/>
    
      <category term="栈" scheme="https://waitwalker.github.io/tags/%E6%A0%88/"/>
    
  </entry>
  
  <entry>
    <title>二叉搜索树</title>
    <link href="https://waitwalker.github.io/2019/04/28/%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91/"/>
    <id>https://waitwalker.github.io/2019/04/28/二叉搜索树/</id>
    <published>2019-04-28T10:27:15.000Z</published>
    <updated>2019-04-28T10:29:48.194Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2 id=&quot;二叉查找树定义&quot;&gt;&lt;a href=&quot;#二叉查找树定义&quot; class=&quot;headerlink&quot; title=&quot;二叉查找树定义&quot;&gt;&lt;/a&gt;二叉查找树定义&lt;/h2&gt;&lt;p&gt;二叉搜索树也叫二叉查找树(Binary Search
        
      
    
    </summary>
    
      <category term="数据结构与算法" scheme="https://waitwalker.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="数据结构" scheme="https://waitwalker.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="算法" scheme="https://waitwalker.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="Swift" scheme="https://waitwalker.github.io/tags/Swift/"/>
    
      <category term="二叉搜索树" scheme="https://waitwalker.github.io/tags/%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>Swift 5 新增特性 </title>
    <link href="https://waitwalker.github.io/2019/04/26/Swift-5-%E6%96%B0%E5%A2%9E%E7%89%B9%E6%80%A7/"/>
    <id>https://waitwalker.github.io/2019/04/26/Swift-5-新增特性/</id>
    <published>2019-04-26T08:13:36.000Z</published>
    <updated>2019-04-26T08:16:17.059Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h3 id=&quot;ABI稳定&quot;&gt;&lt;a href=&quot;#ABI稳定&quot; class=&quot;headerlink&quot; title=&quot;ABI稳定&quot;&gt;&lt;/a&gt;ABI稳定&lt;/h3&gt;&lt;p&gt;Swift 社区最近最重大的新闻应该就是 ABI
        
      
    
    </summary>
    
      <category term="Swift开发" scheme="https://waitwalker.github.io/categories/Swift%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Swift 开发" scheme="https://waitwalker.github.io/tags/Swift-%E5%BC%80%E5%8F%91/"/>
    
      <category term="Swift5" scheme="https://waitwalker.github.io/tags/Swift5/"/>
    
      <category term="新特性" scheme="https://waitwalker.github.io/tags/%E6%96%B0%E7%89%B9%E6%80%A7/"/>
    
  </entry>
  
  <entry>
    <title>msgSend()解读</title>
    <link href="https://waitwalker.github.io/2019/04/25/msgSend-%E8%A7%A3%E8%AF%BB/"/>
    <id>https://waitwalker.github.io/2019/04/25/msgSend-解读/</id>
    <published>2019-04-25T13:12:48.000Z</published>
    <updated>2019-04-25T13:27:46.305Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;runtime最重要的两个核心问题:类的组装和消息.之前文章已经对Method,SEL,IMP,Class等有了初步的介绍,IMP就是一个SEL对应方法的实现函数指针.找到这个指
        
      
    
    </summary>
    
      <category term="Runtime源码解读" scheme="https://waitwalker.github.io/categories/Runtime%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/"/>
    
    
      <category term="Runtime" scheme="https://waitwalker.github.io/tags/Runtime/"/>
    
      <category term="底层" scheme="https://waitwalker.github.io/tags/%E5%BA%95%E5%B1%82/"/>
    
      <category term="源码" scheme="https://waitwalker.github.io/tags/%E6%BA%90%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>Weak解读</title>
    <link href="https://waitwalker.github.io/2019/04/24/Weak%E8%A7%A3%E8%AF%BB/"/>
    <id>https://waitwalker.github.io/2019/04/24/Weak解读/</id>
    <published>2019-04-24T10:46:21.000Z</published>
    <updated>2019-04-25T13:32:23.099Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;在常规开发中我们经常使用__weak修饰符来修饰一个对象,来解决比如循环引用问题.今天具体来看看weak底层实现原理.&lt;/p&gt;
&lt;p&gt;首先创建一个weak修饰的对象,并查看其调用栈:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
int main(int argc, const
        
      
    
    </summary>
    
      <category term="Runtime源码解读" scheme="https://waitwalker.github.io/categories/Runtime%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/"/>
    
    
      <category term="iOS" scheme="https://waitwalker.github.io/tags/iOS/"/>
    
      <category term="Runtime" scheme="https://waitwalker.github.io/tags/Runtime/"/>
    
      <category term="source code" scheme="https://waitwalker.github.io/tags/source-code/"/>
    
  </entry>
  
  <entry>
    <title>Autorelease解读</title>
    <link href="https://waitwalker.github.io/2019/04/23/Autorelease%E8%A7%A3%E8%AF%BB/"/>
    <id>https://waitwalker.github.io/2019/04/23/Autorelease解读/</id>
    <published>2019-04-23T10:38:01.000Z</published>
    <updated>2019-04-25T13:28:31.919Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Autorelease翻译过来就是自动释放,什么是自动释放,怎么自动释放,什么时候自动释放.这些是本文的研究重点.自动释放首先要从autoreleasepool说起.&lt;/p&gt;
&lt;
        
      
    
    </summary>
    
      <category term="Runtime源码解读" scheme="https://waitwalker.github.io/categories/Runtime%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/"/>
    
    
      <category term="Runtime" scheme="https://waitwalker.github.io/tags/Runtime/"/>
    
      <category term="底层" scheme="https://waitwalker.github.io/tags/%E5%BA%95%E5%B1%82/"/>
    
      <category term="源码" scheme="https://waitwalker.github.io/tags/%E6%BA%90%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>Retain&amp;Release解读</title>
    <link href="https://waitwalker.github.io/2019/04/22/Retain-Release%E8%A7%A3%E8%AF%BB/"/>
    <id>https://waitwalker.github.io/2019/04/22/Retain-Release解读/</id>
    <published>2019-04-22T10:31:09.000Z</published>
    <updated>2019-04-25T13:31:22.094Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;iOS通过引用计数(Reference
        
      
    
    </summary>
    
      <category term="Runtime源码解读" scheme="https://waitwalker.github.io/categories/Runtime%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/"/>
    
    
      <category term="Runtime" scheme="https://waitwalker.github.io/tags/Runtime/"/>
    
      <category term="底层" scheme="https://waitwalker.github.io/tags/%E5%BA%95%E5%B1%82/"/>
    
      <category term="源码" scheme="https://waitwalker.github.io/tags/%E6%BA%90%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>Block解读</title>
    <link href="https://waitwalker.github.io/2019/04/18/Block%E8%A7%A3%E8%AF%BB/"/>
    <id>https://waitwalker.github.io/2019/04/18/Block解读/</id>
    <published>2019-04-18T10:26:48.000Z</published>
    <updated>2019-04-25T13:28:55.939Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h3 id=&quot;Block定义&quot;&gt;&lt;a href=&quot;#Block定义&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
      <category term="Runtime源码解读" scheme="https://waitwalker.github.io/categories/Runtime%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/"/>
    
    
      <category term="Runtime" scheme="https://waitwalker.github.io/tags/Runtime/"/>
    
      <category term="底层" scheme="https://waitwalker.github.io/tags/%E5%BA%95%E5%B1%82/"/>
    
      <category term="源码" scheme="https://waitwalker.github.io/tags/%E6%BA%90%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>二叉树</title>
    <link href="https://waitwalker.github.io/2019/04/16/%E4%BA%8C%E5%8F%89%E6%A0%91/"/>
    <id>https://waitwalker.github.io/2019/04/16/二叉树/</id>
    <published>2019-04-16T10:43:24.000Z</published>
    <updated>2019-04-16T10:44:10.094Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h3 id=&quot;二叉树的定义&quot;&gt;&lt;a href=&quot;#二叉树的定义&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
      <category term="数据结构与算法" scheme="https://waitwalker.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="数据结构" scheme="https://waitwalker.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="算法" scheme="https://waitwalker.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="Swift" scheme="https://waitwalker.github.io/tags/Swift/"/>
    
      <category term="二叉树" scheme="https://waitwalker.github.io/tags/%E4%BA%8C%E5%8F%89%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>Ivar objc_property_t Protocol解读</title>
    <link href="https://waitwalker.github.io/2019/04/15/Ivar-objc-property-t-Protocol%E8%A7%A3%E8%AF%BB/"/>
    <id>https://waitwalker.github.io/2019/04/15/Ivar-objc-property-t-Protocol解读/</id>
    <published>2019-04-15T10:29:29.000Z</published>
    <updated>2019-04-25T13:29:55.712Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h3 id=&quot;Ivar声明&quot;&gt;&lt;a href=&quot;#Ivar声明&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
      <category term="Runtime源码解读" scheme="https://waitwalker.github.io/categories/Runtime%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/"/>
    
    
      <category term="Runtime" scheme="https://waitwalker.github.io/tags/Runtime/"/>
    
      <category term="底层" scheme="https://waitwalker.github.io/tags/%E5%BA%95%E5%B1%82/"/>
    
      <category term="源码" scheme="https://waitwalker.github.io/tags/%E6%BA%90%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>Class解读</title>
    <link href="https://waitwalker.github.io/2019/04/15/Class%E8%A7%A3%E8%AF%BB/"/>
    <id>https://waitwalker.github.io/2019/04/15/Class解读/</id>
    <published>2019-04-15T10:28:35.000Z</published>
    <updated>2019-04-25T13:29:30.438Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h4 id=&quot;类的声明&quot;&gt;&lt;a href=&quot;#类的声明&quot; class=&quot;headerlink&quot; title=&quot;类的声明&quot;&gt;&lt;/a&gt;类的声明&lt;/h4&gt;&lt;p&gt;首先我们在runtime.h文件中看到objc_class的结构声明:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
///
        
      
    
    </summary>
    
      <category term="Runtime源码解读" scheme="https://waitwalker.github.io/categories/Runtime%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/"/>
    
    
      <category term="Runtime" scheme="https://waitwalker.github.io/tags/Runtime/"/>
    
      <category term="底层" scheme="https://waitwalker.github.io/tags/%E5%BA%95%E5%B1%82/"/>
    
      <category term="源码" scheme="https://waitwalker.github.io/tags/%E6%BA%90%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>树</title>
    <link href="https://waitwalker.github.io/2019/04/14/%E6%A0%91/"/>
    <id>https://waitwalker.github.io/2019/04/14/树/</id>
    <published>2019-04-14T13:39:09.000Z</published>
    <updated>2019-04-14T13:40:31.421Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h3 id=&quot;树的定义&quot;&gt;&lt;a href=&quot;#树的定义&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
      <category term="数据结构与算法" scheme="https://waitwalker.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="数据结构" scheme="https://waitwalker.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="算法" scheme="https://waitwalker.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="Swift" scheme="https://waitwalker.github.io/tags/Swift/"/>
    
      <category term="树" scheme="https://waitwalker.github.io/tags/%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>快识别隐私政策(Fast OCR Privacy Policy)</title>
    <link href="https://waitwalker.github.io/2019/04/13/%E5%BF%AB%E8%AF%86%E5%88%AB%E9%9A%90%E7%A7%81%E6%94%BF%E7%AD%96-Fast-OCR-Privacy-Policy/"/>
    <id>https://waitwalker.github.io/2019/04/13/快识别隐私政策-Fast-OCR-Privacy-Policy/</id>
    <published>2019-04-13T12:17:06.000Z</published>
    <updated>2019-05-22T10:31:29.218Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;&lt;strong&gt;我们尊重用户的隐私并对非法窃取用户隐私的行为予以坚决抵制.&lt;/strong&gt;&lt;br&gt;We respect user privacy and resist those who illegally steal user
        
      
    
    </summary>
    
      <category term="隐私政策" scheme="https://waitwalker.github.io/categories/%E9%9A%90%E7%A7%81%E6%94%BF%E7%AD%96/"/>
    
    
      <category term="快识别隐私政策" scheme="https://waitwalker.github.io/tags/%E5%BF%AB%E8%AF%86%E5%88%AB%E9%9A%90%E7%A7%81%E6%94%BF%E7%AD%96/"/>
    
  </entry>
  
  <entry>
    <title>狗圈儿隐私政策</title>
    <link href="https://waitwalker.github.io/2019/04/13/%E7%8B%97%E5%9C%88%E5%84%BF%E9%9A%90%E7%A7%81%E6%94%BF%E7%AD%96/"/>
    <id>https://waitwalker.github.io/2019/04/13/狗圈儿隐私政策/</id>
    <published>2019-04-13T12:03:29.000Z</published>
    <updated>2019-04-13T12:14:06.812Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;请您仔细阅读以下条款，如果您对本协议的任何条款表示异议，您可以选择不进入狗圈儿。当您注册成功，无论是进入狗圈儿，还是在狗圈儿上发布任何内容，或者是直接或通过各类方式（如站外API引用等）间接使用狗圈儿网服务和数据的行为，都将被视作已无条件接受本声明所涉全部内容。若您对本声明
        
      
    
    </summary>
    
      <category term="隐私政策" scheme="https://waitwalker.github.io/categories/%E9%9A%90%E7%A7%81%E6%94%BF%E7%AD%96/"/>
    
    
      <category term="狗圈儿隐私政策" scheme="https://waitwalker.github.io/tags/%E7%8B%97%E5%9C%88%E5%84%BF%E9%9A%90%E7%A7%81%E6%94%BF%E7%AD%96/"/>
    
  </entry>
  
  <entry>
    <title>Bedrock Privacy Policy</title>
    <link href="https://waitwalker.github.io/2019/04/13/Bedrock-Privacy-Policy/"/>
    <id>https://waitwalker.github.io/2019/04/13/Bedrock-Privacy-Policy/</id>
    <published>2019-04-13T10:47:52.000Z</published>
    <updated>2019-04-13T11:35:19.908Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;&lt;font size=&quot;3&quot;&gt;&lt;strong&gt;1.我们尊重用户的隐私并对非法窃取用户隐私的行为予以坚决抵制.&lt;/strong&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size=&quot;3&quot;&gt;We respect user privacy and resist those
        
      
    
    </summary>
    
      <category term="隐私政策" scheme="https://waitwalker.github.io/categories/%E9%9A%90%E7%A7%81%E6%94%BF%E7%AD%96/"/>
    
    
      <category term="Bedrock隐私政策" scheme="https://waitwalker.github.io/tags/Bedrock%E9%9A%90%E7%A7%81%E6%94%BF%E7%AD%96/"/>
    
  </entry>
  
  <entry>
    <title>Method解读</title>
    <link href="https://waitwalker.github.io/2019/04/12/Method%E8%A7%A3%E8%AF%BB/"/>
    <id>https://waitwalker.github.io/2019/04/12/Method解读/</id>
    <published>2019-04-12T11:26:32.000Z</published>
    <updated>2019-04-25T13:30:29.621Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;我们知道iOS程序的入口函数在main.其实mian只是苹果给我们的”直观能够感受”的入口,在执行main之前,编译器已经帮我们做了相当多的事情.具体可以参考objc-os.h文
        
      
    
    </summary>
    
      <category term="Runtime源码解读" scheme="https://waitwalker.github.io/categories/Runtime%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/"/>
    
    
      <category term="Runtime" scheme="https://waitwalker.github.io/tags/Runtime/"/>
    
      <category term="底层" scheme="https://waitwalker.github.io/tags/%E5%BA%95%E5%B1%82/"/>
    
      <category term="源码" scheme="https://waitwalker.github.io/tags/%E6%BA%90%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>队列</title>
    <link href="https://waitwalker.github.io/2019/04/11/%E9%98%9F%E5%88%97/"/>
    <id>https://waitwalker.github.io/2019/04/11/队列/</id>
    <published>2019-04-11T10:37:04.000Z</published>
    <updated>2019-04-11T10:39:22.660Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;像栈一样,队列(queue)也是表.队列的操作操两端进行,一端插入,一端删除.&lt;/p&gt;
&lt;h3 id=&quot;队列的基本操作&quot;&gt;&lt;a href=&quot;#队列的基本操作&quot; class=&quot;headerlink&quot; title=&quot;队列的基本操作&quot;&gt;&lt;/a&gt;队列的基本操作&lt;/h3&gt;&lt;h4
        
      
    
    </summary>
    
      <category term="数据结构与算法" scheme="https://waitwalker.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="数据结构" scheme="https://waitwalker.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="算法" scheme="https://waitwalker.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="Swift" scheme="https://waitwalker.github.io/tags/Swift/"/>
    
      <category term="队列" scheme="https://waitwalker.github.io/tags/%E9%98%9F%E5%88%97/"/>
    
  </entry>
  
</feed>
