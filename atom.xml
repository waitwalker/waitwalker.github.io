<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>waitwalker</title>
  
  <subtitle>Keep Moving</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://waitwalker.github.io/"/>
  <updated>2019-04-11T10:37:57.634Z</updated>
  <id>https://waitwalker.github.io/</id>
  
  <author>
    <name>waitwalker</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>队列</title>
    <link href="https://waitwalker.github.io/2019/04/11/%E9%98%9F%E5%88%97/"/>
    <id>https://waitwalker.github.io/2019/04/11/队列/</id>
    <published>2019-04-11T10:37:04.000Z</published>
    <updated>2019-04-11T10:37:57.634Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;像栈一样,队列(queue)也是表.队列的操作操两端进行,一端插入,一端删除.&lt;/p&gt;
&lt;h3 id=&quot;队列的基本操作&quot;&gt;&lt;a href=&quot;#队列的基本操作&quot; class=&quot;headerlink&quot; title=&quot;队列的基本操作&quot;&gt;&lt;/a&gt;队列的基本操作&lt;/h3&gt;&lt;h4
        
      
    
    </summary>
    
      <category term="数据结构与算法" scheme="https://waitwalker.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="Swift" scheme="https://waitwalker.github.io/tags/Swift/"/>
    
      <category term="数据结构" scheme="https://waitwalker.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="算法" scheme="https://waitwalker.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="队列" scheme="https://waitwalker.github.io/tags/%E9%98%9F%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>栈</title>
    <link href="https://waitwalker.github.io/2019/04/11/%E6%A0%88/"/>
    <id>https://waitwalker.github.io/2019/04/11/栈/</id>
    <published>2019-04-11T10:33:54.000Z</published>
    <updated>2019-04-11T10:36:07.658Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;栈(stack)是限制插入和删除只能在一端进行的表,该位置称为栈顶(top).对栈的基本操作有Push(压栈)和Pop(出栈).前者相当于插入,后者相当于删除栈顶元素.栈又叫做L
        
      
    
    </summary>
    
      <category term="数据结构与算法" scheme="https://waitwalker.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="Swift" scheme="https://waitwalker.github.io/tags/Swift/"/>
    
      <category term="数据结构" scheme="https://waitwalker.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="算法" scheme="https://waitwalker.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="栈" scheme="https://waitwalker.github.io/tags/%E6%A0%88/"/>
    
  </entry>
  
  <entry>
    <title>Swift_mutating</title>
    <link href="https://waitwalker.github.io/2019/04/11/Swift-mutating/"/>
    <id>https://waitwalker.github.io/2019/04/11/Swift-mutating/</id>
    <published>2019-04-11T10:31:22.000Z</published>
    <updated>2019-04-11T10:32:13.519Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;在swift中:struct,enum,class都可以定义方法和属性.但是struct和enum是值类型,值类型存储在栈区.class是引用类型,引用类型存在在堆区.&lt;/p&gt;

        
      
    
    </summary>
    
      <category term="Swift开发" scheme="https://waitwalker.github.io/categories/Swift%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Swift" scheme="https://waitwalker.github.io/tags/Swift/"/>
    
      <category term="Swift开发" scheme="https://waitwalker.github.io/tags/Swift%E5%BC%80%E5%8F%91/"/>
    
      <category term="mutating" scheme="https://waitwalker.github.io/tags/mutating/"/>
    
  </entry>
  
  <entry>
    <title>objc_object解读</title>
    <link href="https://waitwalker.github.io/2019/04/10/objc-object%E8%A7%A3%E8%AF%BB/"/>
    <id>https://waitwalker.github.io/2019/04/10/objc-object解读/</id>
    <published>2019-04-10T10:32:59.000Z</published>
    <updated>2019-04-10T10:34:01.756Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Objective-C是面向对象的语言.面向对象语言有一句话说:”万物皆对象”,这个”对象”从哪里来呢?下面从Runtime源码实现来进一步查看.&lt;/p&gt;
&lt;h3
        
      
    
    </summary>
    
      <category term="Runtime源码解读" scheme="https://waitwalker.github.io/categories/Runtime%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/"/>
    
    
      <category term="Runtime" scheme="https://waitwalker.github.io/tags/Runtime/"/>
    
      <category term="底层" scheme="https://waitwalker.github.io/tags/%E5%BA%95%E5%B1%82/"/>
    
      <category term="源码" scheme="https://waitwalker.github.io/tags/%E6%BA%90%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>Swift_Extension</title>
    <link href="https://waitwalker.github.io/2019/04/09/Swift-Extension/"/>
    <id>https://waitwalker.github.io/2019/04/09/Swift-Extension/</id>
    <published>2019-04-09T11:04:36.000Z</published>
    <updated>2019-04-09T12:08:55.603Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Swift Extension 字面意思就是扩展.有点类似OC中Category,按照官方文档,Extension可以用来:&lt;/p&gt;
&lt;h3 id=&quot;1-添加计算型属性&quot;&gt;&lt;a
        
      
    
    </summary>
    
      <category term="Swift开发" scheme="https://waitwalker.github.io/categories/Swift%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Swift 开发" scheme="https://waitwalker.github.io/tags/Swift-%E5%BC%80%E5%8F%91/"/>
    
      <category term="Extension" scheme="https://waitwalker.github.io/tags/Extension/"/>
    
      <category term="Swift" scheme="https://waitwalker.github.io/tags/Swift/"/>
    
  </entry>
  
  <entry>
    <title>Swift_Equable</title>
    <link href="https://waitwalker.github.io/2019/04/09/Swift-Equable/"/>
    <id>https://waitwalker.github.io/2019/04/09/Swift-Equable/</id>
    <published>2019-04-09T11:04:26.000Z</published>
    <updated>2019-04-09T12:04:01.786Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;一般判断两个对象是否相等方法:&lt;br&gt;&lt;br&gt;如果两个对象相等其hashValue一定相等,不能反过来倒推.&lt;br&gt;&lt;br&gt;1)如果两个对象的hashValue不相等,则认为这两个对象一定不相等&lt;br&gt;&lt;br&gt;2)如果两个对象的hashValue相等,则比较两个对象的指针和
        
      
    
    </summary>
    
      <category term="Swift开发" scheme="https://waitwalker.github.io/categories/Swift%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Swift 开发" scheme="https://waitwalker.github.io/tags/Swift-%E5%BC%80%E5%8F%91/"/>
    
      <category term="Extension" scheme="https://waitwalker.github.io/tags/Extension/"/>
    
  </entry>
  
  <entry>
    <title>链表</title>
    <link href="https://waitwalker.github.io/2019/04/09/%E9%93%BE%E8%A1%A8/"/>
    <id>https://waitwalker.github.io/2019/04/09/链表/</id>
    <published>2019-04-09T10:58:06.000Z</published>
    <updated>2019-04-11T10:34:44.966Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2 id=&quot;表的简单定义&quot;&gt;&lt;a href=&quot;#表的简单定义&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
      <category term="数据结构与算法" scheme="https://waitwalker.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="Swift" scheme="https://waitwalker.github.io/tags/Swift/"/>
    
      <category term="数据结构" scheme="https://waitwalker.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="算法" scheme="https://waitwalker.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="链表" scheme="https://waitwalker.github.io/tags/%E9%93%BE%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>Runtime源码编译</title>
    <link href="https://waitwalker.github.io/2019/04/08/Runtime%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91/"/>
    <id>https://waitwalker.github.io/2019/04/08/Runtime源码编译/</id>
    <published>2019-04-08T10:41:06.000Z</published>
    <updated>2019-04-08T10:44:06.250Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Objective-C是基于c语言的封装,使C语言具有了面向对象的能力.OC的本质最终还是转换c语言来执行,而这个转换的过程是通过Runtime这个运行时库来完成的.平常我们只需
        
      
    
    </summary>
    
      <category term="Runtime源码解读" scheme="https://waitwalker.github.io/categories/Runtime%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/"/>
    
    
      <category term="iOS" scheme="https://waitwalker.github.io/tags/iOS/"/>
    
      <category term="Runtime" scheme="https://waitwalker.github.io/tags/Runtime/"/>
    
      <category term="source code" scheme="https://waitwalker.github.io/tags/source-code/"/>
    
  </entry>
  
  <entry>
    <title>iOS中Objective-C和Swift混编及第三方框架相互调用</title>
    <link href="https://waitwalker.github.io/2019/04/07/iOS%E4%B8%ADObjective-C%E5%92%8CSwift%E6%B7%B7%E7%BC%96%E5%8F%8A%E7%AC%AC%E4%B8%89%E6%96%B9%E6%A1%86%E6%9E%B6%E7%9B%B8%E4%BA%92%E8%B0%83%E7%94%A8/"/>
    <id>https://waitwalker.github.io/2019/04/07/iOS中Objective-C和Swift混编及第三方框架相互调用/</id>
    <published>2019-04-07T09:47:38.000Z</published>
    <updated>2019-04-07T09:48:31.226Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;本文将详细介绍一下OC和swift混编问题,其中涉及两大部分:1)oc项目中混编swift的实现; 2)oc或者swift第三库的导入及使用.&lt;/p&gt;
&lt;p&gt;#1
        
      
    
    </summary>
    
      <category term="iOS开发" scheme="https://waitwalker.github.io/categories/iOS%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="iOS" scheme="https://waitwalker.github.io/tags/iOS/"/>
    
      <category term="Swift" scheme="https://waitwalker.github.io/tags/Swift/"/>
    
      <category term="第三方框架" scheme="https://waitwalker.github.io/tags/%E7%AC%AC%E4%B8%89%E6%96%B9%E6%A1%86%E6%9E%B6/"/>
    
  </entry>
  
  <entry>
    <title>iOS性能调优之--tableView优化</title>
    <link href="https://waitwalker.github.io/2019/04/07/iOS%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E4%B9%8B-tableView%E4%BC%98%E5%8C%96/"/>
    <id>https://waitwalker.github.io/2019/04/07/iOS性能调优之-tableView优化/</id>
    <published>2019-04-07T09:38:55.000Z</published>
    <updated>2019-04-07T09:42:03.144Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
      <category term="iOS开发" scheme="https://waitwalker.github.io/categories/iOS%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="iOS" scheme="https://waitwalker.github.io/tags/iOS/"/>
    
      <category term="优化" scheme="https://waitwalker.github.io/tags/%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>iOS性能调优之--内存管理</title>
    <link href="https://waitwalker.github.io/2019/04/07/iOS%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E4%B9%8B-%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/"/>
    <id>https://waitwalker.github.io/2019/04/07/iOS性能调优之-内存管理/</id>
    <published>2019-04-07T09:27:16.000Z</published>
    <updated>2019-04-07T09:36:54.460Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
      <category term="iOS开发" scheme="https://waitwalker.github.io/categories/iOS%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="iOS" scheme="https://waitwalker.github.io/tags/iOS/"/>
    
      <category term="内存管理" scheme="https://waitwalker.github.io/tags/%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>iOS持续集成构建</title>
    <link href="https://waitwalker.github.io/2019/04/07/iOS%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90%E6%9E%84%E5%BB%BA/"/>
    <id>https://waitwalker.github.io/2019/04/07/iOS持续集成构建/</id>
    <published>2019-04-07T09:21:33.000Z</published>
    <updated>2019-04-07T09:24:02.633Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;目前市面上持续集成的方案很多:例如,&lt;strong&gt;Jenkins, Fastlane,Xcode
        
      
    
    </summary>
    
      <category term="iOS开发" scheme="https://waitwalker.github.io/categories/iOS%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="iOS" scheme="https://waitwalker.github.io/tags/iOS/"/>
    
      <category term="CI" scheme="https://waitwalker.github.io/tags/CI/"/>
    
      <category term="持续集成" scheme="https://waitwalker.github.io/tags/%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/"/>
    
  </entry>
  
</feed>
